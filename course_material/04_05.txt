//Add a new property to Student called name which uses first and last
MATCH (s:Student)
SET s.name = s.first + ' ' + s.last

//Which country is the most popular for Graphic Design?
MATCH (program:Program {name:'Graphic Design'})<-[:STUDIED]-(student:Student)-[:STUDIED_ABROAD_IN]->(country:Country)
//You can have this instead!
//MATCH (student:Student)-[:STUDIED_ABROAD_IN]->(country:Country),
//      (student)-[:STUDIED]->(program:Program {name:'Graphic Design'})
RETURN count(student) AS `Total students`, country.name AS Country 
	ORDER BY `Total students` DESC

//Which country attracts the most A grades?
MATCH (grade:Grade {grade:'A'})<-[:OBTAINED]-(:Student)-[:STUDIED_ABROAD_IN]->(country:Country)
RETURN count(grade) AS `Total students`, country.name AS Country  //we can count on grade as well!
	ORDER BY `Total students` DESC //we can add LIMIT 1 to only return one country

//Classmates who took the same course in the same year in the same country
MATCH (student:Student)-[:GRADUATED_IN]->(grad:Year),
      (student)-[:STUDIED]->(program:Program),
      (student)-[:STUDIED_ABROAD_IN]->(country:Country)
WITH grad.value AS Year, program.name AS Program, country.name AS Country, 
	collect(student.name) AS Students WHERE size(Students) >=5
RETURN Year, Program, Country, Students
    ORDER BY Program, Year, Country